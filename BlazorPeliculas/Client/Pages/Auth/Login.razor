@page "/Login"
@using BlazorPeliculas.Client.Auth;
@inject IRepositorio repositorio
@inject SweetAlertService swal
@inject ILoginService loginService
@inject NavigationManager navigationManager

<h3>Login</h3>

<EditForm Model="userInfoDto" OnValidSubmit="LoguearUsuario">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="userInfoDto.Email" />
            <ValidationMessage For="@(()=>userInfoDto.Email)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Password:</label>
        <div>
            <InputText type="password" class="form-control" @bind-Value="userInfoDto.Password" />
            <ValidationMessage For="@(()=>userInfoDto.Password)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private UserInfoDTO userInfoDto = new UserInfoDTO();

    private async Task LoguearUsuario()
    {
        var respuestaHTTP = await repositorio.Post<UserInfoDTO, UserTokenDTO>("api/cuentas/login", userInfoDto);
        if (respuestaHTTP.Error)
        {
            var mensajeError = await respuestaHTTP.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            await loginService.Login(respuestaHTTP.Response!);
            navigationManager.NavigateTo("");
        }
    }
}
